{"ast":null,"code":"var _jsxFileName = \"/Users/adadiniz/Desktop/workspace/Projects/todo-list/src/components/ToDoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoForm = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const toDo = {\n      id: Math.random(),\n      title,\n      description\n    };\n    console.log(toDo);\n    await fetch(API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(toDo),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"toDoForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"T\\xEDtulo da Task\",\n        onChange: e => setTitle(e.target.value),\n        value: title || \"\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Descreva sua Task\",\n        onChange: e => setDescription(e.target.value),\n        value: description || \"\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Qual \\xE9 a prioridade da sua task?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        id: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"facil\",\n          children: \"F\\xE1cil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dificil\",\n          children: \"Dif\\xEDcil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"urgente\",\n          children: \"Urgente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dateConclusion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toDoButton\",\n        children: \"Adicionar Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n\n_c = ToDoForm;\nexport default ToDoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["useState","ToDoForm","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","toDo","id","Math","random","console","log","fetch","API","method","body","JSON","stringify","headers","target","value"],"sources":["/Users/adadiniz/Desktop/workspace/Projects/todo-list/src/components/ToDoForm.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst ToDoForm = () => {\n\n  const [title, setTitle] = useState('');\n\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const toDo = {\n      id: Math.random(),\n      title,\n      description,\n    };\n\n    console.log(toDo);\n\n    await fetch(API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(toDo),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n  \n  return (\n    <div>\n      <form className=\"toDoForm\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"text\" placeholder=\"Título da Task\" onChange={(e) => setTitle(e.target.value)} value={title || \"\"} required></input>\n\n        <textarea name=\"description\" placeholder=\"Descreva sua Task\" onChange={(e) => setDescription(e.target.value)} value={description || \"\"} required></textarea>\n        \n        <label htmlFor=\"category\">Qual é a prioridade da sua task?</label>\n        <select name=\"category\" id=\"category\">\n          <option value=\"facil\">Fácil</option>\n          <option value=\"dificil\">Difícil</option>\n          <option value=\"urgente\">Urgente</option>\n        </select>\n\n        <input type=\"date\" name=\"dateConclusion\"></input>\n\n        <button className=\"toDoButton\">Adicionar Task</button> \n      </form>\n    </div>\n  )\n}\n\nexport default ToDoForm"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAErB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IAEA,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEC,IAAI,CAACC,MAAL,EADO;MAEXV,KAFW;MAGXE;IAHW,CAAb;IAMAS,OAAO,CAACC,GAAR,CAAYL,IAAZ;IAEA,MAAMM,KAAK,CAACC,GAAG,GAAG,OAAP,EAAgB;MACzBC,MAAM,EAAE,MADiB;MAEzBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAFmB;MAGzBY,OAAO,EAAE;QACP,gBAAgB;MADT;IAHgB,CAAhB,CAAX;IAQAlB,QAAQ,CAAC,EAAD,CAAR;IACAE,cAAc,CAAC,EAAD,CAAd;EACD,CArBD;;EAuBA,oBACE;IAAA,uBACE;MAAM,SAAS,EAAC,UAAhB;MAA2B,QAAQ,EAAEC,YAArC;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,WAAW,EAAC,mBAA3C;QAA4D,QAAQ,EAAGC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACe,MAAF,CAASC,KAAV,CAArF;QAAuG,KAAK,EAAErB,KAAK,IAAI,EAAvH;QAA2H,QAAQ;MAAnI;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAU,IAAI,EAAC,aAAf;QAA6B,WAAW,EAAC,mBAAzC;QAA6D,QAAQ,EAAGK,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACe,MAAF,CAASC,KAAV,CAA5F;QAA8G,KAAK,EAAEnB,WAAW,IAAI,EAApI;QAAwI,QAAQ;MAAhJ;QAAA;QAAA;QAAA;MAAA,QAHF,eAKE;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAQ,IAAI,EAAC,UAAb;QAAwB,EAAE,EAAC,UAA3B;QAAA,wBACE;UAAQ,KAAK,EAAC,OAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,KAAK,EAAC,SAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,KAAK,EAAC,SAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAYE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC;MAAxB;QAAA;QAAA;QAAA;MAAA,QAZF,eAcE;QAAQ,SAAS,EAAC,YAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAjDD;;GAAMH,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}